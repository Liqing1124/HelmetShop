.back-to-top-container {
  position: fixed; /* Giữ nút cố định trên màn hình */
  bottom: 30px; /* Cách đáy 30px */
  right: 30px; /* Cách phải 30px */
  z-index: 1000; /* Đảm bảo nút nằm trên các element khác */
}

.back-to-top-button {
  background-color: #212529; /* Màu nền đen (dark) */
  color: white; /* Màu chữ trắng */
  border: none; /* Không có viền */
  border-radius: 50%; /* Bo tròn thành hình tròn */
  width: 50px; /* Chiều rộng */
  height: 50px; /* Chiều cao */
  font-size: 24px; /* Kích thước font (cho mũi tên) */
  cursor: pointer; /* Con trỏ hình bàn tay khi hover */
  display: flex; /* Sử dụng flexbox để căn giữa */
  align-items: center; /* Căn giữa theo chiều dọc */
  justify-content: center; /* Căn giữa theo chiều ngang */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ */
  transition: background-color 0.3s ease, opacity 0.4s ease-in-out, transform 0.4s ease-in-out; /* Hiệu ứng chuyển động */
  opacity: 1; /* Mặc định là hiện */
  transform: scale(1); /* Kích thước bình thường */
}

.back-to-top-button:hover {
  background-color: #343a40; /* Màu nền đen nhạt hơn khi hover */
}

/* Để thêm hiệu ứng xuất hiện mượt mà, bạn có thể kết hợp với state isVisible trong component.
   Ví dụ: Thêm class 'visible' khi isVisible=true và định nghĩa transition cho opacity/transform trong CSS.
   Tuy nhiên, cách làm hiện tại là render có điều kiện (dùng {isVisible && ...}),
   nên không cần thêm class 'visible' phức tạp trong CSS.
   Hiệu ứng đơn giản là nút sẽ xuất hiện/biến mất ngay lập tức khi cuộn qua ngưỡng.
*/ 